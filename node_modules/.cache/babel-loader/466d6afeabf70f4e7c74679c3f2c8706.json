{"ast":null,"code":"import * as actionTypes from './actionsTypes';\nimport { fromJS } from 'immutable';\nconst defaultState = fromJS({\n  foucsd: false,\n  list: []\n});\nexport default ((state = defaultState, action) => {\n  switch (key) {\n    case value:\n      break;\n\n    default:\n      break;\n  }\n\n  if (action.type === actionTypes.SEARCHFOCUS) {\n    // immutable 对象的set方法，会结合之前的immutable对象的值，返回一个全新的对象\n    return state.set('foucsd', true);\n  }\n\n  if (action.type === actionTypes.SEARCHBLUR) {\n    return state.set('foucsd', false);\n  }\n\n  if (action.type === actionTypes.SEARCHDATA) {\n    return state.set('list', action.data);\n  }\n\n  return state;\n});","map":{"version":3,"sources":["D:/myproject/jianshu/src/common/header/store/reducer.js"],"names":["actionTypes","fromJS","defaultState","foucsd","list","state","action","key","value","type","SEARCHFOCUS","set","SEARCHBLUR","SEARCHDATA","data"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,gBAA7B;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,MAAMC,YAAY,GAAGD,MAAM,CAAC;AACxBE,EAAAA,MAAM,EAAE,KADgB;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAAD,CAA3B;AAIA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAiC;AAC5C,UAAQC,GAAR;AACI,SAAKC,KAAL;AAEI;;AAEJ;AACI;AANR;;AAQA,MAAGF,MAAM,CAACG,IAAP,KAAgBT,WAAW,CAACU,WAA/B,EAA2C;AACxC;AACD,WAAOL,KAAK,CAACM,GAAN,CAAU,QAAV,EAAoB,IAApB,CAAP;AACD;;AACD,MAAGL,MAAM,CAACG,IAAP,KAAgBT,WAAW,CAACY,UAA/B,EAA0C;AACtC,WAAOP,KAAK,CAACM,GAAN,CAAU,QAAV,EAAoB,KAApB,CAAP;AACH;;AACD,MAAGL,MAAM,CAACG,IAAP,KAAgBT,WAAW,CAACa,UAA/B,EAA0C;AACtC,WAAOR,KAAK,CAACM,GAAN,CAAU,MAAV,EAAkBL,MAAM,CAACQ,IAAzB,CAAP;AACH;;AACD,SAAOT,KAAP;AACH,CApBD","sourcesContent":["import * as actionTypes from './actionsTypes' \r\nimport {fromJS} from 'immutable'\r\nconst defaultState = fromJS({\r\n    foucsd: false,\r\n    list: []\r\n})\r\nexport default (state = defaultState, action) =>{\r\n    switch (key) {\r\n        case value:\r\n            \r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n    if(action.type === actionTypes.SEARCHFOCUS){\r\n       // immutable 对象的set方法，会结合之前的immutable对象的值，返回一个全新的对象\r\n      return state.set('foucsd', true)\r\n    }\r\n    if(action.type === actionTypes.SEARCHBLUR){\r\n        return state.set('foucsd', false)\r\n    }\r\n    if(action.type === actionTypes.SEARCHDATA){\r\n        return state.set('list', action.data)\r\n    }\r\n    return state\r\n}"]},"metadata":{},"sourceType":"module"}