{"ast":null,"code":"var _jsxFileName = \"D:\\\\myproject\\\\jianshu\\\\src\\\\pages\\\\home\\\\components\\\\banner.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport AwesomeSwiper from 'react-awesome-swiper';\nimport { HomeBanner } from '../style';\nconst config = {\n  loop: true,\n  autoplay: {\n    delay: 3000,\n    stopOnLastSlide: false,\n    disableOnInteraction: true\n  },\n  // Disable preloading of all images\n  preloadImages: false,\n  // Enable lazy loading\n  lazy: true,\n  speed: 500,\n  navigation: {\n    nextEl: '.swiper-button-next',\n    prevEl: '.swiper-button-prev'\n  },\n  pagination: {\n    el: '.swiper-pagination',\n    bulletElement: 'li',\n    hideOnClick: true,\n    clickable: true\n  },\n  on: {\n    slideChange: function () {\n      console.log(this.activeIndex);\n    }\n  }\n};\nswiperRef = null;\n\ngoNext = () => {\n  //use `this.swiperRef.swiper` to get the instance of Swiper\n  swiperRef.swiper.slideNext();\n};\n\nfunction bannerRender() {\n  const {\n    bannerList\n  } = this.props;\n  const bannerListJS = bannerList.toJS();\n  const bannerUI = [];\n\n  if (bannerListJS.banner) {\n    bannerListJS.banner.map(item => {\n      bannerUI.push( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"swiper-slide\",\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img\",\n        src: item.imgUrl,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      })));\n    });\n    return bannerUI;\n  }\n}\n\nfunction ReactBanner() {\n  return /*#__PURE__*/React.createElement(HomeBanner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AwesomeSwiper, {\n    ref: ref => this.swiperRef = ref,\n    config: config,\n    className: \"your-classname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"swiper-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, bannerRender()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"swiper-button-prev\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"swiper-button-next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"swiper-pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })));\n}\n\nconst mapState = state = {};\n\nconst mapDispath = disPath => ({});\n\nexport default connect(mapState, mapDispath)(ReactBanner);","map":{"version":3,"sources":["D:/myproject/jianshu/src/pages/home/components/banner.js"],"names":["React","connect","AwesomeSwiper","HomeBanner","config","loop","autoplay","delay","stopOnLastSlide","disableOnInteraction","preloadImages","lazy","speed","navigation","nextEl","prevEl","pagination","el","bulletElement","hideOnClick","clickable","on","slideChange","console","log","activeIndex","swiperRef","goNext","swiper","slideNext","bannerRender","bannerList","props","bannerListJS","toJS","bannerUI","banner","map","item","push","id","imgUrl","ReactBanner","ref","mapState","state","mapDispath","disPath"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport AwesomeSwiper from 'react-awesome-swiper';\r\nimport {\r\n    HomeBanner\r\n} from '../style'\r\nconst config = {\r\n    loop : true,\r\n    autoplay: {\r\n      delay: 3000,\r\n      stopOnLastSlide: false,\r\n      disableOnInteraction: true,\r\n    },\r\n    // Disable preloading of all images\r\n    preloadImages: false,\r\n    // Enable lazy loading\r\n    lazy: true,\r\n    speed: 500,\r\n    navigation: {\r\n      nextEl: '.swiper-button-next',\r\n      prevEl: '.swiper-button-prev',\r\n    },\r\n    pagination: {\r\n      el: '.swiper-pagination',\r\n      bulletElement : 'li',\r\n      hideOnClick :true,\r\n      clickable :true,\r\n    },\r\n    on: {\r\n      slideChange: function () {\r\n        console.log(this.activeIndex);\r\n      },\r\n    },\r\n  };\r\n  swiperRef = null\r\n  goNext = () => {//use `this.swiperRef.swiper` to get the instance of Swiper\r\n      swiperRef.swiper.slideNext();\r\n       \r\n  }\r\n  function bannerRender(){\r\n    const {bannerList} = this.props\r\n    const bannerListJS = bannerList.toJS()\r\n    const bannerUI = []\r\n    if(bannerListJS.banner){\r\n          bannerListJS.banner.map(item =>{\r\n              bannerUI.push(\r\n                <div className=\"swiper-slide\" key={item.id}>\r\n                    <img className='img' src={item.imgUrl} alt=\"\" />\r\n                </div>\r\n              )\r\n          })\r\n        return bannerUI\r\n     }\r\n}\r\nfunction ReactBanner(){\r\n    return (\r\n        <HomeBanner>\r\n            <AwesomeSwiper ref={ref => (this.swiperRef = ref)} config={config} className=\"your-classname\">\r\n                <div className=\"swiper-wrapper\">\r\n                    {\r\n                       bannerRender()\r\n                    }\r\n                </div>\r\n                <div className=\"swiper-button-prev\"></div>\r\n                <div className=\"swiper-button-next\"></div>\r\n                <div className=\"swiper-pagination\"></div>\r\n            </AwesomeSwiper>\r\n        </HomeBanner>\r\n    )\r\n}\r\nconst mapState = state =({\r\n\r\n})\r\nconst mapDispath = disPath =>({\r\n\r\n})\r\nexport default connect(mapState,mapDispath)(ReactBanner)"]},"metadata":{},"sourceType":"module"}